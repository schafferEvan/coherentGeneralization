
% RELEVANT MAT FILES WERE GENERATED BY:
% accuracyVsGlomSparseness.m
% accuracyVsGlomSparsenessSmall.m
% accuracyVsGlomSparseness_v2.m

%%

initializeGlobals;

paperFig1 = figure; 
set(gcf,'color','w')
set(gcf,'Units','Centimeters')
pos(3)=17.4; %17.4; %8.5;%pos(3)*1.5;
pos(4)=17.4;%pos(4)*1.5;
set(gcf,'Position',pos)

annotation('textbox', [.02 .94 .05 .05],...
    'String', 'A','BackgroundColor','none','Color','k',...
    'LineStyle','none','fontsize',16,'HorizontalAlignment','Center');

annotation('textbox', [.49 .94 .05 .05],...
    'String', 'B','BackgroundColor','none','Color','k',...
    'LineStyle','none','fontsize',16,'HorizontalAlignment','Center');



popDirBig = '~/Dropbox/_AxelLab/matlab/_dan/_popRespVsSparseness/fixedTh/bigparts/';
popDirSmall = '~/Dropbox/_AxelLab/matlab/_dan/_popRespVsSparseness/fixedTh/smallparts/';
%popDir = '~/Dropbox/_AxelLab/matlab/_dan/_pop4thOrderResp_0small/';
popDLBig = dir([popDirBig,'popRespVsSparsenss*']);
popTotBig = load([popDirBig,popDLBig(1).name]);
for j=2:length(popDLBig)
    popTotBig(j) = load([popDirBig,popDLBig(j).name]);
    popTotBig(j).rAgr(popTotBig(j).rAgr==0)=nan;
    popTotBig(j).rAgr90(popTotBig(j).rAgr90==0)=nan;
    popTotBig(j).rAcc(popTotBig(j).rAcc==0)=nan;
    popTotBig(j).rCC(popTotBig(j).rCC==0)=nan;
    popTotBig(j).rAgrSingle(popTotBig(j).rAgrSingle==0)=nan;
    popTotBig(j).rAgrSum(popTotBig(j).rAgrSum==0)=nan;
    popTotBig(j).snr(popTotBig(j).snr==0)=nan;
end
popDLSmall = dir([popDirSmall,'popRespVsSparsenss*']);
popTotSmall = load([popDirSmall,popDLSmall(1).name]);
for j=2:length(popDLSmall)
    popTotSmall(j) = load([popDirSmall,popDLSmall(j).name]);
    popTotSmall(j).rAgr(popTotSmall(j).rAgr==0)=nan;
    popTotSmall(j).rAgr90(popTotSmall(j).rAgr90==0)=nan;
    popTotSmall(j).rAcc(popTotSmall(j).rAcc==0)=nan;
    popTotSmall(j).rCC(popTotSmall(j).rCC==0)=nan;
    popTotSmall(j).rAgrSingle(popTotSmall(j).rAgrSingle==0)=nan;
    popTotSmall(j).rAgrSum(popTotSmall(j).rAgrSum==0)=nan;
    popTotSmall(j).snr(popTotSmall(j).snr==0)=nan;
end


%% load variables for 4th order response scaling plots

dSteps = popTotBig(1).dSteps; %[popTotS(1).dSteps, popTot(1).dSteps(2:end)]; %[t1.dSteps,t101.dSteps];
bigSmallSplit = 29;

tmp = nanmean(popTotSmall(1).rAgr,3);
for j=2:length(popDLSmall)
    tmp = cat(3,tmp,nanmean(popTotSmall(j).rAgr,3));
end
tmp = mean(tmp,3);
rAgrmean = nanmean(popTotBig(1).rAgr,3);
for j=2:length(popDLBig)
    rAgrmean = cat(3,rAgrmean,nanmean(popTotBig(j).rAgr,3));
end
rAgrmean = mean(rAgrmean,3);
rAgrmean = [tmp; rAgrmean(bigSmallSplit+1:end,:)];

tmp = nanmean(popTotSmall(1).rAgr90,3);
for j=2:length(popDLSmall)
    tmp = cat(3,tmp,nanmean(popTotSmall(j).rAgr90,3));
end
tmp = mean(tmp,3);
rAgr90mean = nanmean(popTotBig(1).rAgr90,3);
for j=2:length(popDLBig)
    rAgr90mean = cat(3,rAgr90mean,nanmean(popTotBig(j).rAgr90,3));
end
rAgr90mean = mean(rAgr90mean,3);
rAgr90mean = [tmp; rAgr90mean(bigSmallSplit+1:end,:)];
agr90base = popTotBig(1).agr90base;

tmp = nanmean(popTotSmall(1).rAcc,3);
for j=2:length(popDLSmall)
    tmp = cat(3,tmp,nanmean(popTotSmall(j).rAcc,3));
end
tmp = mean(tmp,3);
rAccmean = nanmean(popTotBig(1).rAcc,3);
for j=2:length(popDLBig)
    rAccmean = cat(3,rAccmean,nanmean(popTotBig(j).rAcc,3));
end
rAccmean = mean(rAccmean,3);
rAccmean = [tmp; rAccmean(bigSmallSplit+1:end,:)];

tmp = nanmean(popTotSmall(1).rCC,3);
for j=2:length(popDLSmall)
    tmp = cat(3,tmp,nanmean(popTotSmall(j).rCC,3));
end
tmp = mean(tmp,3);
rCCmean = nanmean(popTotBig(1).rCC,3);
for j=2:length(popDLBig)
    rCCmean = cat(3,rCCmean,nanmean(popTotBig(j).rCC,3));
end
rCCmean = mean(rCCmean,3);
rCCmean = [tmp; rCCmean(bigSmallSplit+1:end,:)];

tmp = nanmean(popTotSmall(1).snr,3);
for j=2:length(popDLSmall)
    tmp = cat(3,tmp,nanmean(popTotSmall(j).snr,3));
end
tmp = mean(tmp,3);
SNRmean = nanmean(popTotBig(1).snr,3);
for j=2:length(popDLBig)
    SNRmean = cat(3,SNRmean,nanmean(popTotBig(j).snr,3));
end
SNRmean = mean(SNRmean,3);
SNRmean = [tmp; SNRmean(bigSmallSplit+1:end,:)];

SNRraw = SNRmean;
for j=1:size(SNRmean,2)
    SNRmean(:,j) = SNRmean(:,j) - min(SNRmean(:,j));
    SNRmean(:,j) = SNRmean(:,j)/max(SNRmean(:,j));
end

disp(['max SNR = ',num2str(max(SNRraw/99^2))]); % computed SNR with sum rather than mean of 99 test odors, so 99^2 is correction factor



%% scaling with Ny, 3 values of sparseness

for j=1:3
    subplot(3,2,2*j-1)
    
    semilogx( dSteps, SNRmean(:,j), 'linewidth',1, 'color',[.8,.8,.8]); hold on
    
    semilogx( dSteps, rCCmean(:,j), '--','linewidth',1, 'color',[.2,.2,.2]); hold on
    
    rAgrmeanNorm = 2*(rAgrmean(:,j) - 0.5);
    semilogx( dSteps, rAgrmeanNorm, 'linewidth',1, 'color',[.6 .3 0] );
    
    semilogx( dSteps, 1/(1-agr90base)*(-agr90base+rAgr90mean(:,j)), '--', 'linewidth',1, 'color',[.9 .6 0] )
    
    %xlabel('Number of inputs from piriform','fontsize',11)
    xlabel('Piriform Inputs per Readout','fontsize',11)
    ylabel('Fraction of Maximum','fontsize',11)
    if j==3
        [hl,legHndl] = legend('SNR','Correlation','Agreement (\theta=0.5)','Agreement (\theta=0.9)','Location','best'); %'Southeast');
        set(hl,'FontSize',10);
        legend boxoff
        hLines=findobj(legHndl,'type','line');
        set(hLines,'linewidth',1.5);
    end
    set(gca,'XTick',[1e4,1e5,1e6])
    %set(gca,'XTickLabel',{'10^1','','10^3','','10^5','','10^7'})
    ylim([0 1])
    xlim([1e4 3e6])
    box off
end


%% align curves based on expected number of active inputs
xS = [.05 .1   .2];
yS = [.02 .066 .14];
figure
for j=1:3
    semilogx( dSteps*yS(j), SNRmean(:,j), 'linewidth',1); hold all;
end
xlabel('Number of \bf Active \rm Inputs from Piriform','fontsize',12)
ylabel('SNR','fontsize',12)

%% scaling vs sparseness, Ny=1e6
popDirV2 = '~/Dropbox/_AxelLab/matlab/_dan/_popRespVsSparseness/fixedTh/V2/';
popDLV2 = dir([popDirV2,'popRespVsSparsenss_V2*']);
popTotV2 = load([popDirV2,popDLV2(1).name]);
for j=2:length(popDLV2)
    popTotV2(j) = load([popDirV2,popDLV2(j).name]);
    popTotV2(j).rAgr(popTotV2(j).rAgr==0)=nan;
    popTotV2(j).rAgr90(popTotV2(j).rAgr90==0)=nan;
    popTotV2(j).rAcc(popTotV2(j).rAcc==0)=nan;
    popTotV2(j).rCC(popTotV2(j).rCC==0)=nan;
    popTotV2(j).rAgrSingle(popTotV2(j).rAgrSingle==0)=nan;
    popTotV2(j).rAgrSum(popTotV2(j).rAgrSum==0)=nan;
    popTotV2(j).snr(popTotV2(j).snr==0)=nan;
end
xsSteps = popTotV2(1).xsSteps;

rAgrmean = nanmean(popTotV2(1).rAgr,3);
for j=2:length(popDLV2)
    rAgrmean = cat(3,rAgrmean,nanmean(popTotV2(j).rAgr,3));
end
rAgrmean = mean(rAgrmean,3);


rAgr90mean = nanmean(popTotV2(1).rAgr90,3);
for j=2:length(popDLV2)
    rAgr90mean = cat(3,rAgr90mean,nanmean(popTotV2(j).rAgr90,3));
end
rAgr90mean = mean(rAgr90mean,3);
agr90base = popTotV2(1).agr90base;


rAccmean = nanmean(popTotV2(1).rAcc,3);
for j=2:length(popDLV2)
    rAccmean = cat(3,rAccmean,nanmean(popTotV2(j).rAcc,3));
end
rAccmean = mean(rAccmean,3);


rCCmean = nanmean(popTotV2(1).rCC,3);
for j=2:length(popDLV2)
    rCCmean = cat(3,rCCmean,nanmean(popTotV2(j).rCC,3));
end
rCCmean = mean(rCCmean,3);


SNRmean = nanmean(popTotV2(1).snr,3);
for j=2:length(popDLV2)
    SNRmean = cat(3,SNRmean,nanmean(popTotV2(j).snr,3));
end
SNRmean = mean(SNRmean,3);
SNRraw = SNRmean;
SNRmean = SNRmean - min(SNRmean);
SNRmean = SNRmean/max(SNRmean);

%% plot
figure(paperFig1)
subplot(3,2,[2,4,6])
%plot( xsSteps, SNRmean, 'linewidth',1, 'color',[.8,.8,.8]); hold on
plot( xsSteps, rCCmean, '--','linewidth',1, 'color',[.2,.2,.2]); hold on

rAgrmeanNorm = 2*(rAgrmean - 0.5);
plot( xsSteps, rAgrmeanNorm, 'linewidth',1, 'color',[.6 .3 0] );

%plot( xsSteps, 1/(1-agr90base)*(-agr90base+rAgr90mean), '--', 'linewidth',1, 'color',[.9 .6 0] )

%xlabel('Number of inputs from piriform','fontsize',11)
xlabel('Sparseness of Glomerular Responses','fontsize',11)
ylabel('Fraction of Maximum','fontsize',11)
[hl,legHndl] = legend('Correlation','Agreement (\theta=0.5)','Location','Southeast');
%[hl,legHndl] = legend('SNR','Correlation','Agreement (\theta=0.5)','Agreement (\theta=0.9)','Location','best'); %'Southeast');
set(hl,'FontSize',10);
legend boxoff
hLines=findobj(legHndl,'type','line');
set(hLines,'linewidth',1.5);

set(gca,'XTick',.05:.05:.3)
set(gca,'XTickLabel',{'0.05','','0.15','','0.25',''})
ylim([0 1])
xlim([.05 .3])
box off

%% scaling vs number of trained odors
popDirV2 = '~/Dropbox/_AxelLab/matlab/_dan/_popRespVsSparseness/nTrainedOdors/';
popDLV2 = dir([popDirV2,'popRespVsSparsenss_multiTrain*']);
popTotV2 = load([popDirV2,popDLV2(1).name]);
for j=2:length(popDLV2)
    popTotV2(j) = load([popDirV2,popDLV2(j).name]);
    popTotV2(j).rAgr(popTotV2(j).rAgr==0)=nan;
    popTotV2(j).rAgr90(popTotV2(j).rAgr90==0)=nan;
    popTotV2(j).rAcc(popTotV2(j).rAcc==0)=nan;
    popTotV2(j).rCC(popTotV2(j).rCC==0)=nan;
    popTotV2(j).rAgrSingle(popTotV2(j).rAgrSingle==0)=nan;
    popTotV2(j).rAgrSum(popTotV2(j).rAgrSum==0)=nan;
    popTotV2(j).snr(popTotV2(j).snr==0)=nan;
end
ntSteps = popTotV2(1).ntSteps;
dSteps = popTotV2(1).dSteps;

rCCmean = nanmean(popTotV2(1).rCC,3);
for j=2:length(popDLV2)
    rCCmean = cat(3,rCCmean,nanmean(popTotV2(j).rCC,3));
end
rCCmean = mean(rCCmean,3);

rAgrmean = nanmean(popTotV2(1).rAgr,3);
for j=2:length(popDLV2)
    rAgrmean = cat(3,rAgrmean,nanmean(popTotV2(j).rAgr,3));
end
rAgrmean = mean(rAgrmean,3);
rAgrmeanNorm = 2*(rAgrmean - 0.5);


figure;
set(gcf,'defaultAxesColorOrder',[.7,0,0;0,.7,0;0,0,.7]);
semilogx( dSteps, rAgrmeanNorm(:,2:2:6), 'linewidth',1); hold on
semilogx( dSteps, rCCmean(:,2:2:6),'--', 'linewidth',1); hold on
xlabel('Piriform Inputs per Readout','fontsize',11)
ylabel('Fraction of Maximum','fontsize',11)
[hl,legHndl] = legend('Correlation, 2 trained odors','Agreement (\theta=0.5), 2 trained odors',...
    'Correlation, 8 trained odors','Agreement (\theta=0.5), 8 trained odors',...
    'Correlation, 32 trained odors','Agreement (\theta=0.5), 32 trained odors','Location','best'); %'Southeast');
set(hl,'FontSize',10);
legend boxoff
hLines=findobj(legHndl,'type','line');
set(hLines,'linewidth',1.5);
ylim([0 1])
box off
